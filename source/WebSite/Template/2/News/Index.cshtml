@page "{tid:int}-{p:int}.html"
@inject ICMSService _cmsService
@inject IContentGroupService _contentService
@{
    ViewData["Title"] = "公司新闻";
    ViewData["Desc"] = "公司新闻";
}
@section head{

}
@functions{
    private int pageSize = 20;

    public int NewsTypeId { get; set; }

    public int PageIndex { get; set; }

    public int PageCount { get; set; }

    public List<Dictionary<string, object>> dict { get; set; }

    public new int Page { get; set; }

    public void OnGet(int? tid, int? p)
    {
        this.Page = p ?? 1;
        this.PageCount = _cmsService.IcontentColumnDataService.GetContentCount("闽源新闻", " NewsType = 1");
    }
}


<div id="main" class="part">

    <ul id="menu" class="fl">
        <li class="on">
            <a href="/News/0-1.html">
                <i class="icon-chevron-right"></i>公司新闻
            </a>
        </li>
        <li>
            <a href="/News/Dynamics/0-1.html">
                <i class="icon-chevron-right"></i>行业动态
            </a>
        </li>
        <li>
            <a href="/News/Video">
                <i class="icon-chevron-right"></i>闽源视频
            </a>
        </li>
    </ul>


    <div id="list" class="fr">
        <ul class="list1">
            @{
                var News = _cmsService.IcontentColumnDataService.GetContentColumnDataList("闽源新闻", Page, pageSize, " NewsType = 1");
                var Total = News.Count();
                if (News != null)
                {
                    for (var i = 0; i < News.Count; i++)
                    {
                            <li>
                                <span> @Util.Extensions.GetDateTimeFromUnixTime(Convert.ToInt64(News[i]["Createtime"])).ToString("yyyy-MM-dd")</span>
                                <a href="/News/IndexDetail/@Html.Raw(News[i]["cid"] + "/" + News[i]["Id"] + ".html")">
                                    @Html.Raw(News[i]["Title"])
                                </a>
                            </li>
                    }
                }
            }
        </ul>
        <div id="Pagination">
            @await Component.InvokeAsync("PageList", new { PageSize = this.pageSize, PageIndex = this.Page, PageCount = this.PageCount, PageUrl = Model.NewsTypeId + "-{0}.html", PageText = "{0}", ShowCount = 6, ShowAll = false })
        </div>
    </div>
</div>
