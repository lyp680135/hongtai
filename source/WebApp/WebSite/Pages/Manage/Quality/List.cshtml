@page
@model WarrantyManage.Pages.Manage.Quality.ListModel
@using Util.Helpers
@using Common.IService;
@using static DataLibrary.EnumList
@inject DataLibrary.DataContext _db
@inject IUserService userService
@{
    Layout = null;
    var groupIds = userService.ApplicationUser.Mng_admin.GroupManage.Object;
}
@functions{

    /// <summary>
    /// 获取录入人/质检人 姓名
    /// </summary>
    /// <param name="PersionId"></param>
    /// <returns></returns>
    public string GetEntryPersonName(int PersionId)
    {
        var mngAdmin = _db.MngAdmin.FirstOrDefault(c => c.Id == PersionId);
        if (mngAdmin != null)
        {
            return mngAdmin.RealName;
        }
        else
        {
            return string.Empty;
        }
    }

    List<CheckStatus_PdQuality> list_status_show = new List<CheckStatus_PdQuality>() {
CheckStatus_PdQuality.等待审核,
CheckStatus_PdQuality.审核通过,
CheckStatus_PdQuality.审核不通过
};
}

<!DOCTYPE HTML PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=8" />
    <title>质量数据列表</title>
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    @{ await Html.RenderPartialAsync("_ValidationCssPartial");}
    <style type="text/css">
        .tablelist td {
            border-bottom: 1px solid #ccc;
        }

            .tablelist td span {
                width: 72px;
                font-weight: 600;
                display: inline-block;
                text-align: center;
                height: 12px;
                line-height: 0;
            }

                .tablelist td span.name {
                    color: #808080;
                    font-weight: normal;
                }

            .tablelist td .top {
                width: 100%;
                border-bottom: 1px dotted #ccc;
                background-color: #80c0ff;
            }

                .tablelist td .top label {
                    margin-left: 35px;
                }

        .dataLine {
            width: 100%;
            padding-left: 25px;
        }
    </style>
</head>
<body>

    <div class="place">
        <span>位置：</span>
        <ul class="placeul">
            <li>质量管理</li>
            <li>产品质量数据列表</li>
        </ul>
    </div>

    <div class="rightinfo">
        <form id="seachform" method="get" class="layui-form">
            <div class="tools">
                <ul class="seachform" style="width:100%">
                    <li>
                        <label>
                            炉批号
                        </label>
                        <input name="BatCode" id="BatCode" type="text" class="scinput" value="@Model.BatCodeNumber" />
                        <div style="clear:both"></div>
                    </li>
                    <li>
                        <label>
                            审核状态
                        </label>
                        <div class="layui-input-inline">
                            <select name="ChkStatus" class="scinput">
                                <option value="-2">全部</option>
                                @foreach (var item in list_status_show)
                                {
                                    if (Model.Status.HasValue && (int)item == Model.Status)
                                    {
                                        <option value="@((int)item)" selected=selected>@item.ToString()</option>
                                    }
                                    else
                                    {
                                        <option value="@((int)item)">@item.ToString()</option>
                                    }
                                }

                            </select>
                        </div>
                    </li>
                    <li><label>&nbsp;</label><button id="searchbtn" type="submit" class="layui-btn layui-btn-normal"><i class="layui-icon">&#xe615;</i>查询</button></li>
                    <li style="float:right;">
                        <button id="btnCheckPass" class="layui-btn layui-btn-normal" type="button"><i class="layui-icon">&#xe605;</i>审核通过</button>
                        <button id="btnCheckNoPass" class="layui-btn layui-btn-normal" style="background-color: #FF5722;" type="button"><i class="layui-icon">&#x1006;</i> 审核不通过</button>
                    </li>
                </ul>
            </div>
        </form>
        <table class="tablelist">
            <thead>
                <tr>
                    <th>质量数据</th>
                    @*<th>操作</th>*@
                </tr>
            </thead>
            <tbody>
                @foreach (var qua in Model.List_Quality)
                {
                    <tr>
                        <td style="text-indent:0;">
                            <div class="top">
                                <label><input type="checkbox" name="chkId" value="@qua.Id" />炉批号：<b>@qua.Batcode</b></label>
                                <label>录入人/时间：<b>@GetEntryPersonName(qua.EntryPerson)</b>（@qua.Createtime.ToLong().GetDateTimeFromUnixTime()）</label>
                                <label>
                                    审核状态：
                                    @if (qua.CheckStatus == CheckStatus_PdQuality.审核通过)
                                    {
                                        <b style="color:green;">@qua.CheckStatus</b>
                                    }
                                    else if (qua.CheckStatus == CheckStatus_PdQuality.审核不通过)
                                    {
                                        <b style="color:red;">@qua.CheckStatus</b>
                                    }
                                    else
                                    {
                                        <b>@qua.CheckStatus</b>
                                    }
                                    @if (qua.CheckPerson.HasValue)
                                    {
                                        @Html.Raw("（" + GetEntryPersonName(qua.CheckPerson.Value) + "）")
                                    }
                                </label>
                                @*等待审核的质量数据才可以编辑*@
                                @if (qua.CheckStatus == DataLibrary.EnumList.CheckStatus_PdQuality.等待审核 && (groupIds.Contains((int)DataLibrary.EnumList.GroupManage.品质主管)|| groupIds.Contains((int)DataLibrary.EnumList.GroupManage.质量员)))
                                {
                                    <label>
                                        <a href="/Manage/Quality/physicsInfo?id=@qua.Id" class="layui-btn layui-btn-sm layui-btn-normal">编辑</a>
                                    </label>
                                }
                            </div>
                            <div class="dataLine">
                                @{
                                    var qualityList = _db.BaseQualityStandard.ToList();
                                    var productInfo = _db.PdProduct.FirstOrDefault(f => f.Batcode == qua.Batcode);
                                    if (productInfo != null)
                                    {
                                        //单行元素,未禁用,
                                        qualityList = qualityList.Where(w => w.Materialid == productInfo.Materialid && w.TargetType == 0 && w.Status == 0).ToList();
                                    }
                                    Newtonsoft.Json.Linq.JObject jObject = null;
                                    if (qua.Qualityinfos.SafeString() != string.Empty)
                                    {
                                        jObject = (Newtonsoft.Json.Linq.JObject)qua.Qualityinfos.Object;
                                        if (jObject != null)
                                        {
                                            foreach (var item in jObject)
                                            {
                                                var qualityInfo = qualityList.FirstOrDefault(f => f.TargetName == item.Key);
                                                if (qualityInfo != null)
                                                {
                                                    if (qua.CheckStatus == DataLibrary.EnumList.CheckStatus_PdQuality.等待审核)
                                                    {
                                                        <span class="name">@item.Key</span>
                                                    }
                                                    else
                                                    {
                                                        <span class="name">@item.Key</span>
                                                    }
                                                }

                                            }
                                        }

                                    }
                                }
                            </div>
                            <div class="dataLine" style="border-bottom:1px dotted #ccc;">
                                @{

                                    if (jObject != null)
                                    {
                                        foreach (var pro in jObject)
                                        {
                                            @*<span>@pro.Value</span>*@
                                            var qualityInfo = qualityList.FirstOrDefault(f => f.TargetName == pro.Key);
                                            if (qualityInfo != null)
                                            {
                                                if (qua.CheckStatus == DataLibrary.EnumList.CheckStatus_PdQuality.等待审核)
                                                {
                                                    var value = pro.Value.ToString();
                                                    @if (value != string.Empty && value != "NaN" && value != "null" && value != "0")
                                                    {
                                                        double.TryParse(value, out double dvalue);
                                                        string showvalue = dvalue.ToString("0.000");
                                                        if (pro.Key.ToUpper() == "C"
                                                            || pro.Key.ToUpper() == "SI"
                                                            || pro.Key.ToUpper() == "MN"
                                                            || pro.Key.ToUpper() == "CEQ"
                                                            )
                                                        {
                                                            showvalue = dvalue.ToString("0.00");
                                                        }
                                                        else if (pro.Key == "重量偏差")
                                                        {
                                                            showvalue = dvalue.ToString("0.0");
                                                        }
                                                        <span style="color:@Html.Raw((dvalue >= qualityInfo.TargetMin && dvalue <= qualityInfo.TargetMax) ? "black" : "red")">@showvalue</span>
                                                    }
                                                    else
                                                    {
                                                        <span>-</span>
                                                    }

                                                }
                                                else
                                                {
                                                    double.TryParse(pro.Value.ToString(), out double dvalue);
                                                    if (dvalue > 0)
                                                    {
                                                        string showvalue = dvalue.ToString("0.000");
                                                        if (pro.Key.ToUpper() == "C"
                                                            || pro.Key.ToUpper() == "SI"
                                                            || pro.Key.ToUpper() == "MN"
                                                            || pro.Key.ToUpper() == "CEQ"
                                                            )
                                                        {
                                                            showvalue = dvalue.ToString("0.00");
                                                        }
                                                        <span>@showvalue</span>
                                                    }
                                                    else
                                                    {
                                                        if (pro.Key == "重量偏差")
                                                        {
                                                            string showvalue2 = dvalue.ToString("0.0");
                                                            <span>@showvalue2</span>
                                                        }
                                                        else
                                                        {
                                                            <span>-</span>
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            </div>
                            <div class="dataLine">
                                @{
                                    Object JObject_dynamics = null;
                                    //System.Reflection.PropertyInfo[] properties_dynamics = null;
                                    if (qua.Qualityinfos_Dynamics.SafeString() != string.Empty && qua.Qualityinfos_Dynamics.Object.Count >= 2)
                                    {
                                        JObject_dynamics = qua.Qualityinfos_Dynamics.Object[0];
                                        if (JObject_dynamics != null)
                                        {
                                            foreach (var item in JObject_dynamics as Newtonsoft.Json.Linq.JObject)
                                            {
                                                <span class="name">@item.Key</span>
                                            }
                                        }

                                    }
                                }
                            </div>
                            @{
                                var qualityDxList = _db.BaseQualityStandard.ToList();
                                if (productInfo != null)
                                {
                                    //多行元素,未禁用,
                                    qualityDxList = qualityDxList.Where(w => w.Materialid == productInfo.Materialid && w.TargetType == 1 && w.Status == 0).ToList();
                                }
                                foreach (var item in (List<Object>)qua.Qualityinfos_Dynamics.Object)
                                {
                                    <div class="dataLine">
                                        @if (qua.Qualityinfos_Dynamics.SafeString() != string.Empty && qua.Qualityinfos_Dynamics.Object.Count >= 2)
                                        {
                                            if (item != null)
                                            {
                                                var val = ((Newtonsoft.Json.Linq.JObject)item)["下屈服强度"].SafeString();
                                                var valInt = ((Newtonsoft.Json.Linq.JObject)item)["下屈服强度"].ToDouble();
                                                if (val == string.Empty || valInt == 0)
                                                {
                                                    break;
                                                }

                                                @foreach (var itemChild in (Newtonsoft.Json.Linq.JObject)item)
                                                {
                                                    var value = itemChild.Value.SafeString();
                                                    if (value != string.Empty && value != "NaN" && value != "null" && value != "0")
                                                    {
                                                        if (qua.CheckStatus == DataLibrary.EnumList.CheckStatus_PdQuality.等待审核)
                                                        {
                                                            var qualityDxInfo = qualityDxList.FirstOrDefault(f => f.TargetName == itemChild.Key);
                                                            if (qualityDxInfo != null)
                                                            {
                                                                <span style="color:@Html.Raw(itemChild.Value.ToDouble(2) >= qualityDxInfo.TargetMin.ToDouble(2) && itemChild.Value.ToDouble(2) <= qualityDxInfo.TargetMax.ToDouble(2) ? "black" : "red")">@value</span>
                                                            }
                                                            else
                                                            {
                                                                <span>@value</span>
                                                            }
                                                        }
                                                        else
                                                        {
                                                            <span>@value</span>
                                                        }
                                                    }
                                                    else
                                                    {
                                                        <span>-</span>
                                                    }
                                                }
                                            }

                                        }
                                    </div>
                                }
                            }

                        </td>
                        @*修改暂时没做，但审核不通过后，可以继续添加相同炉批号质量数据*@
                        @*<td>
                                @if (qua.CheckStatus == CheckStatus_PdQuality.等待审核)
                                {
                                    <a href="Info?id=@qua.Id" class="layui-btn layui-btn-sm">编辑</a>
                                }
                            </td>*@
                    </tr>
                }
            </tbody>
        </table>
        @await Component.InvokeAsync("PageList", new
        {
            PageSize = Model.PSize,
            PageIndex = Model.PageIndex,
            PageCount = Model.Total,
            PageUrl = Request.GetAbsoluteUri(new List<KeyValuePair<string, string>>() {
new KeyValuePair<string, string>("page","{0}")
}),
            PageText = "{0}",
            ShowCount = 6,
            ShowAll = false
        })

    </div>
    <script type="text/javascript">

        layui.use('form', function () {
            var form = layui.form;

        });

        $(document).ready(function () {
            $('.tablelist tbody tr:odd').addClass('odd');

            $("#btnCheckPass").click(function () {
                check(@((int)CheckStatus_PdQuality.审核通过));

            });

              $("#btnCheckNoPass").click(function () {
                check(@((int)CheckStatus_PdQuality.审核不通过));
            });
        });


        function check(status)
        {

             var chkIds = $("input[name='chkId']:checked");

                if (chkIds.length < 1) {
                    layer.msg("请选择要审核的数据", { icon: 2 });
                } else {
                    var chkStr="";
                    chkIds.each(function () {
                        if ($(this).val() != undefined) {
                            chkStr += $(this).val() + ',';
                        }
                    });

                    var index = layer.load(1, {
                        shade: [0.1, '#fff'] //0.1透明度的白色背景
                    });

                    $.ajax({
                        type: "POST", url: '/Quality/CheckQuality', data: "CheckStatus=" + status + "&chkId=" + chkStr,
                        success: function (re) {
                            if (re == "true") {
                                layer.msg("操作成功", { icon: 1 });
                                setTimeout(function () { window.location.reload(); },2000);
                            } else {
                                layer.msg(re, { icon: 2 });
                            }

                            layer.close(index);
                        }, error: function (err) {
                            if (err.status == 401) {
                                layer.msg("暂无权限", { icon: 2 });
                            } else {
                                layer.msg("操作失败，系统出现错误！", { icon: 2 });
                            }
                            layer.close(index);
                        }
                    });

                }
        }
    </script>
</body>
</html>
