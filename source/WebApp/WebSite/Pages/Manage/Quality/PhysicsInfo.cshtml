@page
@model WarrantyManage.Pages.Manage.Quality.PhysicsInfoModel
@inject DataLibrary.DataContext _db
@using DataLibrary;
@{
    Layout = null;

}


<!DOCTYPE HTML PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=8" />
    <title>产品物理质量数据@(Model.PdQuality.Id > 0 ? "修改" : "录入")</title>
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    @{ await Html.RenderPartialAsync("_ValidationCssPartial");}
    <link href="/js/select2/css/select2.css" rel="stylesheet" />
    <script src="/js/select2/js/select2.full.js"></script>
    <script src="/js/select2/js/i18n/zh-CN.js"></script>
    <style type="text/css">
        .tdtips {
            color: #737373;
        }

        .tbData {
        }

            .tbData th {
                width: 88px;
                line-height: 38px;
                height: 38px;
                text-align: center;
                background-color: #f0f5f7;
                border: 1px solid #e8e8e8;
            }

            .tbData td {
                height: 38px;
                text-align: center;
                border: 1px solid #e8e8e8;
            }

                .tbData td input {
                    width: 86px;
                    text-align: center;
                    border: none;
                    height: 36px;
                }

                    .tbData td input:focus {
                        border: 1px solid #dcdcdc;
                    }

        .bgcolor {
            background: red;
        }

        h3.title {
            font-size: 24px;
            font-weight: 500;
            margin-bottom: 20px;
            text-align: left;
            color: red;
        }


        option {
            color: black;
            line-height: 20px;
        }

        .BatCode {
            height: 32px !important;
        }

        .element {
            width: 300px;
            height: 200px;
            position: absolute;
            left: 50%;
            top: 50%;
            transform: translate(-50%, -50%); /* 50%为自身尺寸的一半 */
            font-size: 30px;
            color: #808080;
        }

        .yllh {
            line-height: 32px;
            display: inline-block;
            float: left;
            padding-right: 10px;
        }
    </style>
</head>
<body>

    <div class="place">
        <span>位置：</span>
        <ul class="placeul">
            <li>质量管理</li>
            <li>
                产品物理质量数据
                @{
                    if (Model.PdQuality != null)
                    {
                        @(Model.PdQuality.Id > 0 ? "修改" : "录入")
                    }
                }
            </li>
        </ul>
    </div>

    <div class="rightinfo">
        <form id="form1" class="layui-form" method="get" onsubmit="javascript: return false;">
            <div class="layui-form-item">
                @*<label class="layui-form-label" style="font-size:16px;">炉批号</label>*@
                @if (Model.PdQuality.Id == 0 && Model.List_workShop != null && Model.List_workShop.Count > 0)
                {
                    <div class="layui-input-inline" style="width:150px;">
                        <select id="WorkShopCode" name="WorkShopCode" lay-filter="WorkShopCode">
                            @foreach (var item in Model.List_workShop)
                            {
                                @if (Model.Wid > 0 && Model.Wid == item.Id)
                                {
                                    <option value="@item.Id" selected="selected">@item.Name</option>
                                }
                                else
                                {
                                    <option value="@item.Id">@item.Name</option>
                                }

                            }
                        </select>
                    </div>
                }
                @if (Model.PdQuality.Id == 0)
                {
                    <div class="layui-input-inline">
                        <input type="text" name="BatCode" id="BatCode" lay-verify="BatCode" autocomplete="off" placeholder="请输入轧制批号" class="validate[required] layui-input BatCode" value="@Model.BatCode" />
                    </div>
                    <div class="layui-input-inline" style="width: 100px;" id="ChangeBatCode">
                        <a class="layui-btn layui-btn-primary layui-btn-sm" onclick="ChangeBatCode(this,1); return false;">
                            <i class="layui-icon">&#xe61a;</i>
                        </a>
                        <a class="layui-btn layui-btn-primary layui-btn-sm" onclick="ChangeBatCode(this, -1);return false;">

                            <i class="layui-icon">&#xe619;</i>
                        </a>
                    </div>
                }
                else
                {
                    <div class="layui-input-inline">
                        <input type="text" name="BatCode" id="BatCode" lay-verify="BatCode" autocomplete="off" placeholder="请输入轧制批号" class="validate[required] layui-input BatCode" value="@Model.PdQuality.Batcode" disabled="disabled" />
                    </div>
                }
                @{
                    var pdList = this._db.PdQuality.Where(w => w.Batcode == Model.BatCode).ToList();
                    if (pdList != null && pdList.Count > 0)
                    {
                        <div class="layui-form-mid layui-word-aux" id="BatCodeTips" style="color:orange !important">
                            @Html.Raw("提示：该炉批号已添加过 " + pdList.Count + " 条质量纪录")
                        </div>
                    }
                }
            </div>
            @if (Model.PdQuality.Id == 0 && !string.IsNullOrWhiteSpace(Model.BatCode) && Model.List_workShop != null && Model.List_workShop.Count > 0)
            {
                <lable class="yllh" style="">冶炼炉号:</lable>
                <div class="layui-input-inline">
                    <input type="text" name="SmeltCode" id="SmeltCode" lay-verify="SmeltCode" autocomplete="off" placeholder="请输入冶炼炉号" class="validate[required] layui-input BatCode" value="@Model.SmeltCode" />
                </div>
                <button type="button" id="selsmeltcode" class="layui-btn layui-btn-sm layui-btn-normal" onclick="locationHref(); return false;"><i class="layui-icon">&#xe615;</i>选择冶炼炉号</button>
            }

            @if (Model.ListQualityStandards == null || Model.ListQualityStandards.Count <= 0)
            {
                <h3 class="element">请先设置质量指标</h3>
            }
            @if (Model.ListQualityStandards != null)
            {

                <div class="layui-form-item">
                    <h3 class="title"></h3>
                    <table class="tbData">
                        <thead>
                            <tr>
                                @{
                                    var ListQualityStandards = Model.ListQualityStandards.ToList();
                                    if (ListQualityStandards != null && ListQualityStandards.Count > 0)
                                    {
                                        var dxQualityStandards = Model.ListQualityStandards.Where(w => w.TargetType == 0).ToList();
                                        if (dxQualityStandards != null && dxQualityStandards.Count > 0)
                                        {
                                            foreach (var item in dxQualityStandards)
                                            {
                                                if (item.TargetName != "Ceq")
                                                {
                                                    if (Model.PdQuality != null && Model.PdQuality.Qualityinfos.SafeString() != string.Empty)
                                                    {
                                                        foreach (var itemChild in (Newtonsoft.Json.Linq.JObject)Model.PdQuality.Qualityinfos.Object)
                                                        {
                                                            if (item.TargetName == itemChild.Key)
                                                            {
                                                                <th>@itemChild.Key</th>
                                                            }
                                                        }
                                                    }
                                                    else
                                                    {
                                                        <th>@item.TargetName</th>
                                                    }
                                                }
                                            }
                                        }

                                    }
                                }
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                @{
                                    //var list_required = new List<string> { "C", "Si", "Mn", "P", "S" };
                                    if (ListQualityStandards != null && ListQualityStandards.Count > 0)
                                    {
                                        var sxQualityStandards = Model.ListQualityStandards.Where(w => w.TargetType == 0).ToList();
                                        if (sxQualityStandards != null && sxQualityStandards.Count > 0)
                                        {
                                            foreach (var item in sxQualityStandards)
                                            {
                                                if (item.TargetName != "Ceq")
                                                {
                                                    if (Model.PdQuality != null && Model.PdQuality.Qualityinfos.SafeString() != string.Empty)
                                                    {
                                                        foreach (var itemChild in (Newtonsoft.Json.Linq.JObject)Model.PdQuality.Qualityinfos.Object)
                                                        {
                                                            if (item.TargetName == itemChild.Key)
                                                            {
                                                                <td>
                                                                    <input class="validate[@Html.Raw(item.TargetIsNull == 1 ? "required," : "")custom[number]]" type="text" name="@Html.Raw(item.TargetName)" value="@itemChild.Value" onkeypress="if(event.keyCode==13) focusNextInput(this);" />
                                                                </td>
                                                            }
                                                        }
                                                    }
                                                    else
                                                    {
                                                        <td>
                                                            <input class="validate[@Html.Raw(item.TargetIsNull == 1 ? "required," : "")custom[number]]" type="text" name="@Html.Raw(item.TargetName)" onkeypress="if(event.keyCode==13) focusNextInput(this);" />
                                                        </td>
                                                    }

                                                }
                                            }
                                        }

                                    }
                                }
                            </tr>
                        </tbody>
                    </table>
                </div>
                <div class="layui-form-item">
                    <table class="tbData">
                        <thead>
                            <tr>

                                @{
                                    if (ListQualityStandards != null && ListQualityStandards.Count > 0)
                                    {

                                        var sxQualityStandards = Model.ListQualityStandards.Where(w => w.TargetType == 1).ToList();
                                        if (sxQualityStandards != null && sxQualityStandards.Count > 0)
                                        {
                                            <th></th>
                                            @foreach (var item in sxQualityStandards)
                                            {
                                                if (Model.PdQuality != null && Model.PdQuality.Qualityinfos_Dynamics.SafeString() != string.Empty && Model.PdQuality.Qualityinfos_Dynamics.Object.Count > 2)
                                                {
                                                    foreach (var itemChild in (Newtonsoft.Json.Linq.JObject)Model.PdQuality.Qualityinfos_Dynamics.Object[0])
                                                    {
                                                        if (item.TargetName == itemChild.Key)
                                                        {
                                                            <th>@itemChild.Key</th>
                                                        }

                                                    }

                                                }
                                                else
                                                {
                                                    <th>@item.TargetName</th>
                                                }

                                            }
                                        }

                                    }
                                }
                            </tr>
                        </thead>
                        <tbody>
                            @{
                                if (ListQualityStandards != null && ListQualityStandards.Count > 0)
                                {
                                    for (int i = 0; i < 4; i++)
                                    {
                                        <tr>

                                            @if (ListQualityStandards != null && ListQualityStandards.Count > 0)
                                            {

                                                var sxQualityStandards = Model.ListQualityStandards.Where(w => w.TargetType == 1).ToList();
                                                if (sxQualityStandards != null && sxQualityStandards.Count > 0)
                                                {
                                                    <td class="tdtips">第@(i + 1)次</td>
                                                    @foreach (var item in sxQualityStandards)
                                                    {
                                                        if (Model.PdQuality != null && Model.PdQuality.Qualityinfos_Dynamics.SafeString() != string.Empty && Model.PdQuality.Qualityinfos_Dynamics.Object.Count > 2)
                                                        {
                                                            foreach (var itemChild in (Newtonsoft.Json.Linq.JObject)Model.PdQuality.Qualityinfos_Dynamics.Object[i])
                                                            {
                                                                if (item.TargetName == itemChild.Key)
                                                                {
                                                                    <td>
                                                                        <input class="validate[@Html.Raw(item.TargetIsNull == 1 ? "required," : "")custom[number]]" type="text" name="@Html.Raw(item.TargetName + i)" value="@Html.Raw(itemChild.Value)" onkeypress="if(event.keyCode==13) focusNextInput(this);" />
                                                                    </td>
                                                                }

                                                            }

                                                        }
                                                        else
                                                        {
                                                            <td>
                                                                <input class="validate[@Html.Raw(item.TargetIsNull == 1 ? "required," : "")custom[number]]" type="text" name="@Html.Raw(item.TargetName + i)" onkeypress="if(event.keyCode==13) focusNextInput(this);" />
                                                            </td>
                                                        }

                                                    }

                                                }
                                            }
                                        </tr>
                                    }
                                }
                            }
                        </tbody>
                    </table>
                </div>

                <div class="layui-form-item">
                    <div class="layui-input-block">
                        @if (Model.ListQualityStandards != null && Model.ListQualityStandards.Count > 0)
                        {
                            @if (Model.PdQuality.Id == 0)
                            {
                                <button class="layui-btn layui-btn-normal" type="button" id="btnSubmit">保存</button>
                            }
                            else
                            {
                                <input type="hidden" value="@Model.PdQuality.Id" name="pId" id="pId" />
                                <button class="layui-btn layui-btn-normal" type="button" id="btnEdit" oncli="return false;">修改</button>
                            }
                        }

                    </div>
                </div>
            }
        </form>
    </div>
    @if (!string.IsNullOrEmpty(Model.Msg))
    {
        <script type="text/javascript">
            layer.msg('@Model.Msg', { icon: 2 });
        </script>
    }
    <script type="text/javascript">
        function locationHref() {
            var index = layer.open({
                title: '历史记录',
                type: 2,
                shadeClose: true, //点击遮罩关闭层
                area: ['90%', '75%'],//大小
                content: '/Manage/quality/SmeltList?type=PhysicsInfo',//url
                anim: '5',//动画效果
                offset: '50px',//弹出层位置
                shadeClose: true,
                // maxmin: true,//最大化,最小化
                btn: ['关闭'],
                yes: function (index, layero) {
                    layer.close(index);
                }
            });
        }
        function Flash(smeltCode) {
            //var currCode = $("#BatCode").val();
            $('#SmeltCode').val(smeltCode);
            layer.closeAll();
            //window.location.href = '/Manage/quality/PhysicsInfo?smeltCode=' + smeltCode + '&batcode=' + currCode;
        }
        //按回车移动光标
        function focusNextInput(thisInput) {
            var inputs = document.getElementsByTagName("input");
            for (var i = 0; i < inputs.length; i++) {
                // 如果是最后一个，则焦点回到第一个
                if (i == (inputs.length - 1)) {
                    inputs[0].focus();
                    break;
                } else if (thisInput == inputs[i]) {
                    inputs[i + 1].focus();
                    break;
                }
            }
        }
        function ChangeBatCode(obj, offset) {
            var currCode = $("#BatCode").val();
            var WorkShopCode = $("#WorkShopCode").val();
            GetBatCode(currCode, offset, WorkShopCode)
            return false;
        }

        function GetBatCode(currCode, offset, workShopCode) {
            var index = layer.load(1, {
                shade: [0.1, '#fff'] //0.1透明度的白色背景
            });
            $.ajax({
                type: "POST", url: '/Quality/GetPatCodeNew', data: "curcode=" + currCode + "&offset=" + offset + '&wid=' + workShopCode,
                success: function (re) {
                    var json = JSON.parse(re);

                    if (json.Status == 1) {
                        if (json.data != '') {
                            $("#BatCode").val(json.Data);
                            $("#ChangeBatCode button").removeClass("layui-btn-disabled");
                            window.location.href = '/Manage/quality/PhysicsInfo?batcode=' + $("#BatCode").val() + '&wid=' + $('#WorkShopCode').val();
                            layer.msg("炉批号获取完成");

                            //CheckBatCode(json.Data);
                        }
                    } else {
                        layer.msg(json.Msg, { icon: 2 });
                    }
                    layer.close(index);
                }, error: function () {
                    layer.msg("炉批号获取失败");
                    $("#ChangeBatCode button").removeClass("layui-btn-disabled");
                    layer.close(index);
                }
            });
        }

        function CheckBatCode(batcode) {
            // var val = $("#BatCode").val();

            $.ajax({
                type: "POST", url: '/Quality/Exists', data: "BatCode=" + batcode,
                success: function (re) {
                    if (re.state) {
                        window.location.href = './info?htmlStr=' + re.content + '&batcode=' + batcode;

                    } else {
                        window.location.href = './info?htmlStr=' + re.content + '&batcode=' + batcode;
                        $("#BatCodeTips").html(re.content);
                    }
                }
            });
        }
        function FlashBatCode(obj) {
            var $this = $(obj);
            if ($this.val().trim() == '') {
                layer.msg('请输入轧制批号')
                return;
            }
            window.location.href = '/Manage/quality/PhysicsInfo?batcode=' + $this.val().trim();
        }
        $(function () {
            $('#BatCode').blur(function () {
                var $this = $(this);
                if ($this.val().trim() == '') {
                    layer.msg('请输入轧制批号')
                    return;
                }
                window.location.href = '/Manage/quality/PhysicsInfo?batcode=' + $this.val().trim() + '&wid=' + $('#WorkShopCode').val();
            });

            $('#searchBtn').click(function () {
                var Sid = $('#SmeltCode').val();
                var currCode = $("#BatCode").val();
                var pass = $("#form1").validationEngine("validate");
                if (pass) {
                    window.location.href = '/Manage/quality/PhysicsInfo?smeltCode=' + Sid + '&batcode=' + currCode;
                }

            });
            $('#searchBtn').click(function () {
                var Sid = $('#SmeltCode').val().trim();
                var currCode = $("#BatCode").val();

                if (Sid == '') {
                    layer.msg('请选择冶炼炉号').trim();
                    return;
                }
                if (currCode == '') {
                    layer.msg('请输入炉批号');
                    return;
                }
                window.location.href = '/Manage/quality/PhysicsInfo?smeltCode=' + Sid + '&batcode=' + currCode;
            });

            //$('#SmeltCode').select2({
            //    placeholder: "选择冶炼炉号",
            //    width: "152px",
            //    language: "zh-CN",
            //});
            $('#WorkShopCode').select2({
                placeholder: "选择车间",
                width: "152px",
                language: "zh-CN",
                minimumResultsForSearch: -1
            });

            $('#WorkShopCode').change(function () {
                var $this = $(this);
                window.location.href = '/Manage/quality/PhysicsInfo?wid=' + $this.val();
            });
            //保存数据
            $("#btnSubmit").click(function () {
                $('input').removeClass('bgcolor');
                var SmeltCode = $("#SmeltCode").val();
                var BatCode = $('#BatCode').val();
                var pass = $("#form1").validationEngine("validate");
                if (pass) {
                    $.ajax({
                        type: "POST", url: '/Quality/Check?batCode=' + BatCode,
                        data: $("#form1").serialize(),
                        success: function (re) {
                            //如果校验通过就直接添加
                            if (re.flag == "true") {
                                Add(SmeltCode);
                            }
                            else if (re.flag == 2) {
                                layer.msg(re.msg);
                            }
                            //否则提示
                            else {
                                $.each(re.msg, function (key, val) {
                                    //$('.' + val + '').css({ 'background':'red'});
                                    $('input[name=' + val + ']').addClass('bgcolor');
                                });
                                layer.confirm('系统检测到录入数据中有不合格数据，请确认是否继续保存？', { icon: 3, title: '提示' }, function (index) {

                                    Add(SmeltCode);
                                    layer.close(index);
                                });
                            }
                        }, error: function () {
                            layer.close(loadLayer);
                            layer.msg('添加失败，系统出现未知错误', { icon: 2 });
                        }
                    });
                }
            });
            //添加
            function Add(SmeltCode) {
                var BatCode = $('#BatCode').val();
                var loadLayer = layer.load(1);
                $.ajax({
                    type: "POST", url: '/Quality/PhysicsAdd?SmeltCode=' + SmeltCode + '&BatCode=' + BatCode,
                    data: $("#form1").serialize(),
                    success: function (re) {
                        if (re.toString() == 'true') {
                            layer.msg('添加成功', { icon: 1 });
                            setTimeout(function () {
                                window.location.href = '/Manage/Quality/List';
                            }, 2000);
                        } else {
                            layer.msg(re, { icon: 2 });
                        }
                        layer.close(loadLayer);
                    }, error: function () {
                        layer.close(loadLayer);
                        layer.msg('添加失败，系统出现未知错误', { icon: 2 });
                    }
                });

                $('input').removeClass('bgcolor');
            }
            function Edit(pId) {
                var loadLayer = layer.load(1);
                $.ajax({
                    type: "POST", url: '/Quality/PhysicsEdit?qId=' + pId,
                    data: $("#form1").serialize(),
                    success: function (re) {
                        if (re.toString() == 'true') {
                            layer.msg('修改成功', { icon: 1 });
                            setTimeout(function () {
                                window.location.href = '/Manage/Quality/List';
                            }, 2000);
                        } else {
                            layer.msg(re, { icon: 2 });
                        }
                        layer.close(loadLayer);
                    }, error: function () {
                        layer.close(loadLayer);
                        layer.msg('修改失败，系统出现未知错误', { icon: 2 });
                    }
                });
                $('input').removeClass('bgcolor');
            }
            $('#btnEdit').click(function () {
                $('input').removeClass('bgcolor');
                var pId = $("#pId").val();
                var pass = $("#form1").validationEngine("validate");
                if (pass) {
                    $.ajax({
                        type: "POST", url: '/Quality/Check?pId=' + pId,
                        data: $("#form1").serialize(),
                        success: function (re) {
                            //如果校验通过就直接添加
                            if (re.flag == "true") {
                                Edit(pId);
                            }
                            else if (re.flag == "2") {
                                layer.msg(re.msg);
                            }
                            //否则提示
                            else {
                                $.each(re.msg, function (key, val) {
                                    //$('.' + val + '').css({ 'background':'red'});
                                    $('input[name=' + val + ']').addClass('bgcolor');
                                });
                                layer.confirm('系统检测到录入数据中有不合格数据，请确认是否继续修改？', { icon: 3, title: '提示' }, function (index) {

                                    Edit(pId);
                                    layer.close(index);
                                });
                            }
                        }, error: function () {
                            layer.close(loadLayer);
                            layer.msg('添加失败，系统出现未知错误', { icon: 2 });
                        }
                    });
                }
            });
        });
    </script>
</body>
</html>
