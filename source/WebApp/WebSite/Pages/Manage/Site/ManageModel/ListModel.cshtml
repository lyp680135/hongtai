@page
@model WarrantyManage.Pages.Manage.Site.ManageModel.ListModelModel
@inject DataLibrary.DataContext _db
<html>
<head>
    <meta charset="utf-8">
    <title>模型列表</title>
    <meta name="renderer" content="webkit">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    @{ await Html.RenderPartialAsync("_ValidationCssPartial");}
    <style type="text/css">
        .layui-table td {
            text-indent: 0px;
        }

        .layui-table tbody tr {
            cursor: pointer;
        }

        #Description {
            height: 38px;
        }
    </style>
</head>
<body>
    <div class="place">
        <span>位置：</span>
        <ul class="placeul">
            <li>模型管理</li>
            <li>模型列表</li>
        </ul>
    </div>
    <div class="formbody">
        <div class="tools" style="height: auto;">
            <form method="get" id="form1">
                <div class="tools">
                    <ul class="seachform" style="width:100%">
                        <li>
                            <label style="font-size:14px">
                                模型名称:
                            </label>
                            <input name="Description" id="Description" type="text" class="scinput" value="@Model.Description" />
                            <div style="clear:both"></div>
                        </li>
                        <li>
                        <li><label>&nbsp;</label><button id="sb" name="sb" class="layui-btn layui-btn-normal"><i class="layui-icon">&#xe615;</i>查询</button></li>
                    </ul>
                </div>
                <div style="clear:both"></div>
                <div style="float:right;position: absolute;top: 48px; right: 30px;">
                    <button id="add" name="add" class="layui-btn layui-btn-normal" onclick="locationAdd(this); return false;"><i class="layui-icon">&#xe654;</i>添加</button>
                    <button id="delete" name="delete" class="layui-btn layui-btn-danger" onclick="delSubmit(); return false;"><i class="layui-icon"></i> 删除</button>
                </div>
                <table class="layui-table">
                    <thead>
                        <tr>
                            <th><input name="id" type="checkbox" id="checkAll" /></th>
                            @*<th>Id</th>*@
                            <th>模型名称</th>
                            <th>创建人</th>
                            <th>已使用栏目</th>
                            <th>创建时间</th>
                            <th>操作</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.ManageModels != null && Model.ManageModels.Count > 0)
                        {
                            foreach (var item in Model.ManageModels)
                            {
                                <tr onclick="EditModel(@item.Id); return false;">
                                    <td onclick="stopchoose()"><input name="id" type="checkbox" value="@item.Id" /></td>
                                    @*<td>@item.Id</td>*@
                                    <td>@item.Description</td>
                                    <td>@_db.MngAdmin.FirstOrDefault(f => f.Id == item.Uid).RealName</td>
                                    @{
                                        var gropContentList = Model.ContentGroups.Where(w => w.ModelId == item.Id).Select(s => s.ContentTitle).ToList();
                                        if (gropContentList.Count > 0)
                                        {
                                            <td>@string.Join(" 、 ", gropContentList)</td>
                                        }
                                        else
                                        {
                                            <td></td>
                                        }
                                    }
                                    <td>@Util.Extensions.GetDateTimeFromUnixTime(item.CreateTime.ToLong()).ToString("yyyy/MM/dd")</td>
                                    <td onclick="stopchoose()">
                                        <button class="layui-btn layui-btn-sm layui-btn-normal" mid="@item.Id" typeName="info" onclick="locationHref(this); return false;"><i class="layui-icon">&#xe642</i> 查看</button>
                                        @*@if (Model.showEditButton.Keys.Any(x => x == "sitecontent_" + item.Id.ToString() + ""))
                                            {

                                            }*@
                                        @* <button class="layui-btn layui-btn-sm layui-btn-normal" mid="@item.Id" onclick="EditModel(this); return false;"><i class="layui-icon">&#xe642</i>编辑</button>*@
                                    </td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
                @await Component.InvokeAsync("PageList", new
                {
                    PageSize = Model.PageSize,
                    PageIndex = Model.PageIndex,
                    PageCount = Model.PageCount,
                    PageUrl = Request.GetAbsoluteUri(new List<KeyValuePair<string, string>>() {
                                                                                                                                                     new KeyValuePair<string, string>("pg","{0}")
                                                                                                                                               }),
                    PageText = "{0}",
                    ShowCount = 6,
                    ShowAll = false
                })
            </form>
        </div>
    </div>
</body>
</html>
<script type="text/javascript">

    $('.layui-table tbody tr:odd').addClass('odd');
    $(function () {
        $('#sb').click(function () {
            $('#form1').submit();
        });


        // 全选
        $('#checkAll').click(function () {
            var flag = $(this).is(':checked') ? true : false;
            $(".layui-table tbody :checkbox").attr("checked", flag);
        });
        //删除应用
        $('#delete').click(function () {

        });
    })
    //编辑检查
    function EditModel(id) {
        //var $this = $(obj);
        //var id = $this.attr('mid');
        $.ajax({
            url: '/ManageModel/CheckModel',
            type: 'post',
            data: { Id: id },
            dataType: 'json',
            success: function (data) {
                if (data.state) {
                    window.location.href = '/Manage/Site/ManageModel/EditModel?Id=' + id;
                } else {
                    layer.alert(data.content, { icon: 2, time: 2000 });
                }
            }
        })
    }
    //删除
    function delSubmit() {
        var selectedid = getSelectedId();

        if (selectedid == '') {
            layer.msg('请选中所需删除的行！', { icon: 2 });
            return;
        }

        layer.confirm('确认删除吗?', {
            btn: ['是', '否']
        }, function (index, layero) {
            $.ajax({
                url: '/ManageModel/DeleteModel',
                type: 'post',
                data: { Ids: selectedid },
                dataType: 'json',
                success: function (data) {
                    if (data.state) {
                        layer.msg(data.content, { icon: 1 });
                        window.location.reload();
                    } else {
                        layer.alert(data.content, { icon: 2, time: 2000 });
                    }
                }
            })
        }, function (index) {
            layer.closeAll();
        });
    }
    function stopchoose() {
        cancelBubble();
    }
    function cancelBubble(e) {
        var evt = e ? e : window.event;
        if (evt.stopPropagation) {        //W3C
            evt.stopPropagation();
        } else {       //IE
            evt.cancelBubble = true;
        }
    }
    function locationAdd(obj) {
        var $this = $(obj);
        var typeName = $this.attr('name');
        var locationhref = '/Manage/Site/ManageModel/AddModel';
        window.location.href = locationhref;
    }

    function getSelectedId() {
        var selectedid = '';
        //获取最后一条选中项
        $(".layui-table tbody input[name='id']:checked").each(function () {
            selectedid += $(this).val() + ';';
        });

        return selectedid;
    }
    //查看详情
    function locationHref(obj) {
        var $this = $(obj);
        var id = $this.attr('mid');
        if (id <= 0) {
            layer.msg('请选中所需编辑行！', { icon: 2 });
            return;
        }
        var index = layer.open({
            title: '模型详情',
            type: 2,
            shadeClose: true, //点击遮罩关闭层
            area: ['90%', '75%'],//大小
            content: '/Manage/Site/ManageModel/InfoModel?Id=' + id,//url
            anim: '5',//动画效果
            offset: '50px',//弹出层位置
            shadeClose: true,
            // maxmin: true,//最大化,最小化
            btn: ['关闭'],
            yes: function (index, layero) {
                layer.close(index);
            }
        });
    }


    //显示关联表信息
    function SelectRow(obj) {
        if ($(obj).data('opened')) {
            $(obj).data('opened', false)
            $(obj).closest('tr').next('div').hide();
        }
        else {
            $(obj).data('opened', true)
            $(obj).closest('tbody').find('div').hide();
            $.ajax({
                url: '/ManageModel/ListModel',
                type: 'post',
                dataType: 'json',
                data: { Id: $(obj).attr('data-Id') },
                success: function (res) {
                    if (res.state) {
                       // console.log(res.content);
                        var $tr = '<div><lable style="font-size:20px">模型对应字段:</lable><table class="layui-table" lay-size="sm"><thead>';
                        $tr += '<th>字段名</th><th>字段描述</th> <th>字段类型</th> <th>字段长度</th> <th>是否为空</th><th>展示类型</th><th>字段初始值</th></thead > ';
                        $.each(res.content, function (key, val) {
                            $tr += '<tbody><tr>';
                            $tr += '<td>' + val.fildName + '</td><td>' + val.fildDescription + '</td>';
                            $tr += '<td>' + GetFildType(val.fildType) + '</td><td>' + val.fildLength + '</td><td>' + GetFildIsNull(val.fildIsNull) + '</td>';
                            $tr += '<td>' + GetPageShowType(val.pageShowType) + '</td>';
                            $tr += '<td>' + val.fildValue + '</td>';
                            $tr += '</tr></tbody>'
                        });
                        $tr += '</table></div>';
                        $(obj).closest('tr').after($tr);
                    }
                    else {
                        layer.msg(res.content, { icon: 1 });
                    }
                }, error: function (XMLHttpRequest, textStatus, errorThrown) {
                    layer.msg('操作失败，出现服务器错误！', { icon: 2 });
                }
            })
        }
    }
    //获取字段类型
    function GetFildType(fildType) {
        switch (fildType) {
            case 1:
                return 'varchar';
                break;
            case 2:
                return 'integer';
                break;
        }
    }
    //获取是否为空
    function GetFildIsNull(fildIsNull) {
        switch (fildIsNull) {
            case 0:
                return '为空';
                break;
            case 1:
                return '不为空';
        }
    }
    //获取展示类型
    function GetPageShowType(pageShowType) {
        switch (pageShowType) {
            case 1:
                return 'text';
                break;
            case 2:
                return 'image';
                break;
            case 3:
                return 'number';
                break;
            case 4:
                return 'email';
                break;
            case 5:
                return 'phone';
                break;
            case 6:
                return 'textarea';
                break;
            case 7:
                return 'selected';
                break;
            case 8:
                return 'file';
                break;
            case 9:
                return 'radio';
                break;
            case 10:
                return 'checkbox';
                break;
        }
    }
</script>